{"ast":null,"code":"var _jsxFileName = \"/home/joao/git/curso-reactjs-nextjs-project-2/src/contexts/PostsProvider/index.jsx\",\n    _s = $RefreshSig$();\n\nimport P from 'prop-types';\nimport { useReducer } from 'react';\nimport { PostsContext } from './context';\nimport { data } from './data';\nimport { reducer } from './reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostsProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [postsState, postsDispatch] = useReducer(reducer, data);\n  return /*#__PURE__*/_jsxDEV(PostsContext.Provider, {\n    value: {\n      postsState,\n      postsDispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n};\n\n_s(PostsProvider, \"OwoatHr2fw5OiQ1knvb3b1O/rd8=\");\n\n_c = PostsProvider;\nPostsProvider.propTypes = {\n  children: P.node.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsProvider\");","map":{"version":3,"sources":["/home/joao/git/curso-reactjs-nextjs-project-2/src/contexts/PostsProvider/index.jsx"],"names":["P","useReducer","PostsContext","data","reducer","PostsProvider","children","postsState","postsDispatch","propTypes","node","isRequired"],"mappings":";;;AAAA,OAAOA,CAAP,MAAc,YAAd;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,OAAO,MAAMC,aAAa,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC7C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,UAAU,CAACG,OAAD,EAAUD,IAAV,CAA9C;AAEA,sBAAO,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEI,MAAAA,UAAF;AAAcC,MAAAA;AAAd,KAA9B;AAAA,cAA8DF;AAA9D;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAJM;;GAAMD,a;;KAAAA,a;AAMbA,aAAa,CAACI,SAAd,GAA0B;AACxBH,EAAAA,QAAQ,EAAEN,CAAC,CAACU,IAAF,CAAOC;AADO,CAA1B","sourcesContent":["import P from 'prop-types';\nimport { useReducer } from 'react';\nimport { PostsContext } from './context';\nimport { data } from './data';\nimport { reducer } from './reducer';\n\nexport const PostsProvider = ({ children }) => {\n  const [postsState, postsDispatch] = useReducer(reducer, data);\n\n  return <PostsContext.Provider value={{ postsState, postsDispatch }}>{children}</PostsContext.Provider>;\n};\n\nPostsProvider.propTypes = {\n  children: P.node.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}