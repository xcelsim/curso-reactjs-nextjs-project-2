{"ast":null,"code":"var _jsxFileName = \"/home/joao/git/curso-reactjs-nextjs-project-2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport P from 'prop-types';\nimport { useEffect, useMemo, useState, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = _ref => {\n  let {\n    post,\n    handleClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: '14px'\n      },\n      onClick: () => handleClick(post.title),\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, post.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Post;\nPost.propTypes = {\n  post: P.shape({\n    id: P.number,\n    title: P.string,\n    body: P.string\n  }),\n  handleClick: P.func\n};\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [value, setValue] = useState([]);\n  const input = useRef(null);\n  const contador = useRef(0);\n  console.log('Pai renderizou!'); //component did mount\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(r => r.json()).then(r => setPosts(r));\n  });\n  useEffect(() => {\n    input.current.focus();\n    console.log(input.current);\n  }, [value]);\n  useEffect(() => {\n    contador.current++;\n  });\n\n  const handleClick = value => {\n    setValue(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Renderizou: \", contador.current, \"x\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: input,\n        type: \"search\",\n        value: value,\n        onChange: e => setValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), useMemo(() => {\n      return posts.length > 0 && posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          post: post,\n          handleClick: handleClick\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 20\n        }, this);\n      });\n    }, [posts]), posts.length <= 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Ainda n\\xE3o existem posts.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MI96qzQASVLl3fnpVe1fm7dykJg=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/joao/git/curso-reactjs-nextjs-project-2/src/App.js"],"names":["P","useEffect","useMemo","useState","useRef","Post","post","handleClick","fontSize","title","body","id","propTypes","shape","number","string","func","App","posts","setPosts","value","setValue","input","contador","console","log","fetch","then","r","json","current","focus","e","target","length","map"],"mappings":";;;AAAA,OAAOA,CAAP,MAAc,YAAd;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,QAA7B,EAAuCC,MAAvC,QAAqD,OAArD;AACA,OAAO,WAAP;;;AAEA,MAAMC,IAAI,GAAG,QAA2B;AAAA,MAA1B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAA0B;AACtC,sBACE;AAAmB,IAAA,SAAS,EAAC,MAA7B;AAAA,4BACE;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAX;AAAiC,MAAA,OAAO,EAAE,MAAMD,WAAW,CAACD,IAAI,CAACG,KAAN,CAA3D;AAAA,gBACGH,IAAI,CAACG;AADR;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBAAIH,IAAI,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,KAAUJ,IAAI,CAACK,EAAf;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;KAAMN,I;AAWNA,IAAI,CAACO,SAAL,GAAiB;AACfN,EAAAA,IAAI,EAAEN,CAAC,CAACa,KAAF,CAAQ;AACZF,IAAAA,EAAE,EAAEX,CAAC,CAACc,MADM;AAEZL,IAAAA,KAAK,EAAET,CAAC,CAACe,MAFG;AAGZL,IAAAA,IAAI,EAAEV,CAAC,CAACe;AAHI,GAAR,CADS;AAMfR,EAAAA,WAAW,EAAEP,CAAC,CAACgB;AANA,CAAjB;;AASA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMmB,KAAK,GAAGlB,MAAM,CAAC,IAAD,CAApB;AACA,QAAMmB,QAAQ,GAAGnB,MAAM,CAAC,CAAD,CAAvB;AAEAoB,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EANa,CAQb;;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACSC,CAAD,IAAOA,CAAC,CAACC,IAAF,EADf,EAEGF,IAFH,CAESC,CAAD,IAAOT,QAAQ,CAACS,CAAD,CAFvB;AAGD,GAJQ,CAAT;AAMA3B,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,KAAK,CAACQ,OAAN,CAAcC,KAAd;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACQ,OAAlB;AACD,GAHQ,EAGN,CAACV,KAAD,CAHM,CAAT;AAKAnB,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,QAAQ,CAACO,OAAT;AACD,GAFQ,CAAT;;AAIA,QAAMvB,WAAW,GAAIa,KAAD,IAAW;AAC7BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,iCAAiBG,QAAQ,CAACO,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAO,QAAA,GAAG,EAAER,KAAZ;AAAmB,QAAA,IAAI,EAAC,QAAxB;AAAiC,QAAA,KAAK,EAAEF,KAAxC;AAA+C,QAAA,QAAQ,EAAGY,CAAD,IAAOX,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASb,KAAV;AAAxE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,EAKGlB,OAAO,CAAC,MAAM;AACb,aACEgB,KAAK,CAACgB,MAAN,GAAe,CAAf,IACAhB,KAAK,CAACiB,GAAN,CAAW7B,IAAD,IAAU;AAClB,4BAAO,QAAC,IAAD;AAAoB,UAAA,IAAI,EAAEA,IAA1B;AAAgC,UAAA,WAAW,EAAEC;AAA7C,WAAWD,IAAI,CAACK,EAAhB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,CAFF;AAMD,KAPO,EAOL,CAACO,KAAD,CAPK,CALV,EAaGA,KAAK,CAACgB,MAAN,IAAgB,CAAhB,iBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA9CQjB,G;;MAAAA,G;AAgDT,eAAeA,GAAf","sourcesContent":["import P from 'prop-types';\nimport { useEffect, useMemo, useState, useRef } from 'react';\nimport './App.css';\n\nconst Post = ({ post, handleClick }) => {\n  return (\n    <div key={post.id} className=\"post\">\n      <h1 style={{ fontSize: '14px' }} onClick={() => handleClick(post.title)}>\n        {post.title}\n      </h1>\n      <p>{post.body}</p>\n    </div>\n  );\n};\n\nPost.propTypes = {\n  post: P.shape({\n    id: P.number,\n    title: P.string,\n    body: P.string,\n  }),\n  handleClick: P.func,\n};\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [value, setValue] = useState([]);\n  const input = useRef(null);\n  const contador = useRef(0);\n\n  console.log('Pai renderizou!');\n\n  //component did mount\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts')\n      .then((r) => r.json())\n      .then((r) => setPosts(r));\n  });\n\n  useEffect(() => {\n    input.current.focus();\n    console.log(input.current);\n  }, [value]);\n\n  useEffect(() => {\n    contador.current++;\n  });\n\n  const handleClick = (value) => {\n    setValue(value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Renderizou: {contador.current}x</h1>\n      <p>\n        <input ref={input} type=\"search\" value={value} onChange={(e) => setValue(e.target.value)} />\n      </p>\n      {useMemo(() => {\n        return (\n          posts.length > 0 &&\n          posts.map((post) => {\n            return <Post key={post.id} post={post} handleClick={handleClick} />;\n          })\n        );\n      }, [posts])}\n      {posts.length <= 0 && <p> Ainda n√£o existem posts.</p>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}