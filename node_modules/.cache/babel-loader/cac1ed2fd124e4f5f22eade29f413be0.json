{"ast":null,"code":"var _jsxFileName = \"/home/joao/git/curso-reactjs-nextjs-project-2/src/contexts/CounterProvider/index.jsx\",\n    _s = $RefreshSig$();\n\nimport P from 'prop-types';\nimport { CounterContext } from './context';\nimport { data } from './data';\nimport { reducer } from './reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CounterProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [counterState, counterDispatch] = useReducer(reducer, data);\n  return /*#__PURE__*/_jsxDEV(CounterContext.Provider, {\n    value: {\n      counterState,\n      counterDispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CounterProvider, \"P3LIPOhhZeTPfaAA0yh5H0RLQXc=\");\n\n_c = CounterProvider;\nCounterProvider.propTypes = {\n  children: P.node.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterProvider\");","map":{"version":3,"sources":["/home/joao/git/curso-reactjs-nextjs-project-2/src/contexts/CounterProvider/index.jsx"],"names":["P","CounterContext","data","reducer","CounterProvider","children","counterState","counterDispatch","useReducer","propTypes","node","isRequired"],"mappings":";;;AAAA,OAAOA,CAAP,MAAc,YAAd;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,OAAO,MAAMC,eAAe,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC/C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCC,UAAU,CAACL,OAAD,EAAUD,IAAV,CAAlD;AACA,sBAAO,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEI,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,KAAhC;AAAA,cAAoEF;AAApE;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHM;;GAAMD,e;;KAAAA,e;AAKbA,eAAe,CAACK,SAAhB,GAA4B;AAC1BJ,EAAAA,QAAQ,EAAEL,CAAC,CAACU,IAAF,CAAOC;AADS,CAA5B","sourcesContent":["import P from 'prop-types';\nimport { CounterContext } from './context';\nimport { data } from './data';\nimport { reducer } from './reducer';\n\nexport const CounterProvider = ({ children }) => {\n  const [counterState, counterDispatch] = useReducer(reducer, data);\n  return <CounterContext.Provider value={{ counterState, counterDispatch }}>{children}</CounterContext.Provider>;\n};\n\nCounterProvider.propTypes = {\n  children: P.node.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}